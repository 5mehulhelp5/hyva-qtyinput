<?php

/*
 * (c) Lucas van Staden <sales@proxiblue.com.au>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

declare(strict_types=1);

use Magento\Catalog\Block\Product\View;
use Magento\Catalog\Model\Product;
use Magento\Framework\Escaper;

/** @var View $block */
/** @var Escaper $escaper */

/** @var Product $product */
$product = $block->getProduct();
$minQty = $block->getMinimalQty($product) * 1;
$maxQty = $block->getMaxQty($product) * 1;
$qtyStep = $block->getQtyStep($product) * 1;
$message = [];
if ($minQty > 1) {
    $message[] = $escaper->escapeHtml(__('Minimum quantity of %1', $minQty));
}
if ($qtyStep > 1) {
    $message[] = $escaper->escapeHtml(__('Quantity increment of %1', $qtyStep));
}
if ($product->getData('max_sale_qty') > 0 && $product->getData('max_sale_qty') < 1000) {
    $message[] = $escaper->escapeHtml(__('Maximum quantity of %1', $maxQty));
}
?>

<script>
    function initQtyField() {
        return {
            qty: <?= $block->getProductDefaultQty() * 1 ?>,
            itemId: '<?= (int)$block->getRequest()->getParam('id') ?>',
            productId: '<?= (int)$product->getId() ?>',
            minQty: <?= $minQty ?>,
            maxQty: <?= $maxQty ?>,
            qtyStep: <?= $qtyStep ?>,
            onGetCartData: function onGetCartData($dispatch) {
                var cart = event.detail.data && event.detail.data.cart;
                if (cart && cart.items) {
                    $this = this;
                    var cartItem = cart.items.find(function (item) {
                        return (
                            item.item_id === $this.itemId
                            && item.product_id === $this.productId
                        )
                    });
                    if (cartItem && cartItem.qty) {
                        qty = cartItem.qty;
                        $dispatch('update-qty-<?= (int)$product->getId() ?>', qty);
                    }
                    if (cartItem && cartItem.options && cartItem.options.length) {
                        $dispatch('update-options', cartItem.options);
                    }
                }
            },
            checkQtyRange: function ($dispatch) {
                if (this.qty != null) {
                    var qty = this.qty
                    if (qty > this.maxQty) {
                        this.dispatchMessage("<?= $escaper->escapeHtml(__('Maximum quantity of %1 exceeded. Value was set to maximum allowed', $maxQty))  ?>");
                        this.qty = this.maxQty;
                    } else if (qty < this.minQty) {
                        this.dispatchMessage("<?=  $escaper->escapeHtml(__('Minimum quantity of %1 exceeded. Value was set to minimum allowed', $minQty))  ?>");
                        this.qty = this.minQty;
                    } else if ((this.qty / <?= $qtyStep ?>) % 1 != 0) {
                        this.dispatchMessage("<?=  $escaper->escapeHtml(__('Please enter a value that is incremental of %1', $qtyStep))  ?>")
                        this.qty = this.minQty;
                    }
                }
                $dispatch('update-qty-<?= (int)$product->getId() ?>', this.qty);
            },
            dispatchMessage: function (message) {
                window.dispatchMessages(
                    [
                        {
                            type: "warning",
                            text: message,
                        },
                    ],
                    4000
                );
            }
        };
    }
</script>
<div class="block mb-2">
    <?php if (count($message) > 0): ?>
        <ul style="list-style-type: disc;">
            <?= __('This product has quantity limits:') ?>
            <?php
            foreach ($message as $qtyMessage):
                ?>
                <li class="ml-4"><?= $qtyMessage ?></li>
            <?php
            endforeach;
            ?>
        </ul>
    <?php endif; ?>
</div>
<div x-data="initQtyField()"
     class="inline w-1/3 mr-2">
    <div class="inline mr-2">
        <label for="qty[<?= (int)$product->getId() ?>]"
               class="sr-only"
        >
            <?= $escaper->escapeHtml(__('Quantity')) ?>
        </label>
        <input name="qty"
               @private-content-loaded.window="onGetCartData($dispatch)"
               id="qty[<?= (int)$product->getId() ?>]"
               form="product_addtocart_form"
               type="number"
               pattern-="[0-9]{0,4}"
               :min="minQty"
               :max="maxQty"
               :value="qty"
               :step="qtyStep"
               class="form-input px-2 py-2 w-20 text-center"
               x-model.number="qty"
               @change="checkQtyRange($dispatch)"
        />
    </div>
</div>
